// Generated by CoffeeScript 1.3.3
(function() {
  var addCss, vibrateLoop;

  addCss = function(el, property, amount) {
    var current;
    el = $(el);
    current = parseInt(el.css(property));
    return el.css(property, current + amount);
  };

  vibrateLoop = function() {
    var _this = this;
    if ($(this).data('vibrate.wiggled')) {
      addCss(this, 'padding-left', 1);
      addCss(this, 'padding-bottom', 1);
      addCss(this, 'padding-right', -1);
      addCss(this, 'padding-top', -1);
      $(this).data('vibrate.wiggled', false);
    } else {
      addCss(this, 'padding-left', -1);
      addCss(this, 'padding-bottom', -1);
      addCss(this, 'padding-right', 1);
      addCss(this, 'padding-top', 1);
      $(this).data('vibrate.wiggled', true);
    }
    if ($(this).data('vibrate.status' || $(this).data('vibrate.wiggled'))) {
      return setTimeout((function() {
        return vibrateLoop.apply(_this);
      }), $(this).data('vibrate.speed'));
    }
  };

  $.fn.vibrate = function(opts) {
    var el;
    if (opts == null) {
      opts = {
        speed: 50
      };
    }
    el = $(this);
    el.data('vibrate.speed', opts.speed);
    el.data('vibrate.status', false);
    el.on('vibrate:start', function() {
      if (!($(this).data('vibrate.status'))) {
        $(this).data('vibrate.status', true);
        return vibrateLoop.apply(this);
      }
    });
    el.on('vibrate:stop', function() {
      return $(this).data('vibrate.status', false);
    });
  };

}).call(this);
